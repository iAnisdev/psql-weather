DROP TABLE IF EXISTS temperature;
DROP TABLE IF EXISTS city;

CREATE TABLE city (
	id SERIAL UNIQUE PRIMARY KEY,
	name VARCHAR(30) NOT NULL UNIQUE,
	country VARCHAR(30)  NOT NULL,
	zip INT  NOT NULL UNIQUE,
	isCapital boolean DEFAULT False NOT NULL,
	createdAT TIMESTAMP DEFAULT current_timestamp
);

CREATE TABLE temperature (
	id SERIAL UNIQUE PRIMARY KEY,
	city_id INT,
	low int NOT NULL,
	high int NOT NULL,
	date DATE NOT NULL,
	createdAT TIMESTAMP DEFAULT current_timestamp,
	CONSTRAINT FK_city
		FOREIGN KEY(city_id)
		REFERENCES city(id)
)

INSERT INTO city(name, country, zip, isCapital) VALUES('bangkok' , 'TH', 10100, true); 
INSERT INTO city(name, country, zip, isCapital) VALUES('Phuket' , 'TH', 8300, false);
INSERT INTO temperature(city_id , low , high , date) VALUES(1 , 22 , 38 , '2023-06-01');
INSERT INTO temperature(city_id , low , high , date) VALUES(1 , 28 , 36 , '2023-06-02');
INSERT INTO temperature(city_id , low , high , date) VALUES(1 , 24 , 37 , '2023-06-03');
INSERT INTO temperature(city_id , low , high , date) VALUES(1 , 29 , 35 , '2023-06-04');
INSERT INTO temperature(city_id , low , high , date) VALUES(1 , 26 , 39 , '2023-06-05');
INSERT INTO temperature(city_id , low , high , date) VALUES(2 , 28 , 41 , '2023-06-01');
INSERT INTO temperature(city_id , low , high , date) VALUES(2 , 29 , 40 , '2023-06-02');
INSERT INTO temperature(city_id , low , high , date) VALUES(2 , 27 , 38 , '2023-06-03');
INSERT INTO temperature(city_id , low , high , date) VALUES(2 , 31 , 27 , '2023-06-04');
INSERT INTO temperature(city_id , low , high , date) VALUES(2 , 32 , 37 , '2023-06-05');
SELECT * FROM city;
SELECT name , zip FROM city;
SELECT * FROM temperature ORDER BY high;
SELECT date , name , country, zip, low , high  FROM temperature INNER JOIN city ON temperature.city_id = city.id;
INSERT INTO city(name, country, zip, isCapital) VALUES('Krabi' , 'TH', 81000, false);
SELECT * FROM city;
SELECT date , name , country, zip, low , high  FROM temperature LEFT JOIN city ON temperature.city_id = city.id;
INSERT INTO city(name, country, zip, isCapital) VALUES('Pattaya' , 'TH', 20150, false);
SELECT date , name , country, zip, low , high  FROM temperature RIGHT JOIN city ON temperature.city_id = city.id;
SELECT count(*) FROM city;
SELECT sum(low) FROM temperature;
SELECT MIN(low) FROM temperature WHERE city_id = 1;
SELECT MAX(high) FROM temperature WHERE city_id = 2;
SELECT MAX(high) FROM temperature;
SELECT avg((high + low)/2) FROM temperature;